# -*- sh -*-
bindkey "^?" backward-delete-char
bindkey "[3~" backward-delete-char
setopt ignoreeof

REPORTTIME=10

export RUBYLIB="${RUBYLIB}":/usr/local/lib/site_ruby
export PATH=$HOME/bin:"${PATH}"
#export PATH=~/.gems/bin:"${PATH}"
#export PATH=~/jruby-1.0/bin:"${PATH}"
#export GEM_HOME=~/.gems
export HREF_DATADIR=~/.href
export EDITOR=vim

export GOPATH=$HOME/go
export PATH="$GOPATH/bin:$PATH"

alias gosh="rlwrap gosh"
alias g="goruby -rirb -e'IRB.start'"
alias ec=emacsclient
alias ecc="ec -c"
alias ecn="ec -nw"

# to expand global alias. see $HOME/.config/zabrze/config.yaml
eval "$(zabrze init --bind-keys)"

function svn() {
  if [ $1 = "diff" ] ; then
    command env LANG=C LC_ALL=C svn diff $2 $3 $4 $5 $6
  else
    command svn $*
  fi
}

function say() {
  echo "(SayText \"$*\")"| festival --pipe
}

function reload() {
  source ~/.zshrc
}

completion_list () {
  mkdir -p ~/.zsh/completion
  if [ ! -f ~/.zsh/completion/$*[-1] ]; then
    eval $*[1,-2] | sed -e 's/^/compadd /g' > ~/.zsh/completion/$*[-1]
  fi

  `cat ~/.zsh/completion/$*[-1]`
}

_cheat () {
  completion_list 'cheat sheets | grep -v All' _cheat
}

compdef _cheat cheat

_rake () {
  if [ -f Rakefile ]; then
    compadd `rake -T | awk "{print \\$2}" | xargs`
  fi
}

compdef _rake rake

## load prompt configuration
eval "$(starship init zsh)"

## load private .zshrc configuration file
#
[ -f ~/dotfiles/zshrc.private ] && source ~/dotfiles/zshrc.private

# load utilities
for f in $HOME/dotfiles/zsh/*.zsh; do
    source $f
done

if [[ -f $HOME/wc/src/github.com/asdf-vm/asdf/asdf.sh ]]; then
    source $HOME/wc/src/github.com/asdf-vm/asdf/asdf.sh
    # append completions to fpath
    fpath=(${ASDF_DIR}/completions $fpath)
    # initialise completions with ZSH's compinit
    autoload -Uz compinit
    compinit
fi

test -f $HOME/wc/src/github.com/asdf-vm/asdf/plugins/java/set-java-home.zsh && \
    source $HOME/wc/src/github.com/asdf-vm/asdf/plugins/java/set-java-home.zsh

export RUBY_CONFIGURE_OPTS="--enable-shared --disable-install-doc"

# load virtualenv
if [[ -f /usr/share/virtualenvwrapper/virtualenvwrapper.sh ]]; then
    export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
    export WORKON_HOME=$HOME/.virtualenvs
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
fi

# Rust
if [[ -f $HOME/.cargo/bin/rustup ]]; then
    export PATH="$HOME/.cargo/bin:$PATH"
    source <(rustup completions zsh)
fi

## load dir_colors
DIRCOLORS=$HOME/src/dircolors-solarized/dircolors.ansi-universal
test -s $DIRCOLORS && eval $(dircolors $DIRCOLORS)

fpath=(~/.zsh/Completion $fpath)

eval "$(direnv hook zsh)"

# k8s
type kubectl > /dev/null && source <(kubectl completion zsh)

export PATH="$HOME/.local/bin:$PATH"

