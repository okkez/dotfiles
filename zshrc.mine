# -*- sh -*-
bindkey "^?" backward-delete-char
bindkey "[3~" backward-delete-char
setopt ignoreeof

REPORTTIME=10

export RUBYLIB="${RUBYLIB}":/usr/local/lib/site_ruby
export PATH=$HOME/bin:"${PATH}"
#export PATH=~/.gems/bin:"${PATH}"
#export PATH=~/jruby-1.0/bin:"${PATH}"
#export GEM_HOME=~/.gems
export HREF_DATADIR=~/.href
export EDITOR=vim

export GOPATH=$HOME/go
export PATH="$GOPATH/bin:$PATH"

alias gosh="rlwrap gosh"
alias g="goruby -rirb -e'IRB.start'"
alias ec=emacsclient
alias ecc="ec -c"
alias ecn="ec -nw"

function svn() {
  if [ $1 = "diff" ] ; then
    command env LANG=C LC_ALL=C svn diff $2 $3 $4 $5 $6
  else
    command svn $*
  fi
}

function say() {
  echo "(SayText \"$*\")"| festival --pipe
}

function reload() {
  source ~/.zshrc
}

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'

typeset -ga chpwd_functions
typeset -ga preexec_functions
function _set_rprompt_vcs() {
  LANG=C vcs_info >&/dev/null
  if [ -n "${vcs_info_msg_0_}" ]; then
    RPROMPT="${DEFAULT_RPROMPT}:%{${fg[green]}%}${vcs_info_msg_0_}%{${reset_color}%}"
  else
    RPROMPT=$DEFAULT_RPROMPT
  fi
}
chpwd_functions+=_set_rprompt_vcs
preexec_functions+=_set_rprompt_vcs

function _set_prompt_lang() {
    local ruby_version
    local colored_ruby_version
    local rbenv_ruby_version
    local node_version
    local colored_node_version
    colored_ruby_version=""
    colored_node_version=""
    colored_virrualenv_info="%{${fg[green]}%}none%{${reset_color}%}"
    node_version=$(nvm version)
    rbenv_bundler_version=$(rbenv bundler-ruby-version)
    if [ -n "${rbenv_bundler_version}" ]; then
        ruby_version=$rbenv_bundler_version
    else
        ruby_version=$(rbenv version | cut -d" " -f1)
    fi
    if [ -n "${ruby_version}"  ]; then
        colored_ruby_version="%{${fg[green]}%}${ruby_version}%{${reset_color}%}"
    fi
    if [ -n "${node_version}" ]; then
        colored_node_version="%{${fg[green]}%}${node_version}%{${reset_color}%}"
    fi
    if [ -n "${VIRTUAL_ENV}" ]; then
        _virtualenv_prompt_info=$(basename $VIRTUAL_ENV)
        colored_virrualenv_info="%{${fg[green]}%}${_virtualenv_prompt_info}%{${reset_color}%}"
    fi
    PROMPT="${colored_ruby_version} | ${colored_node_version} | ${colored_virrualenv_info}"$'\n'"${DEFAULT_PROMPT}"
}
preexec_functions+=_set_prompt_lang

completion_list () {
  mkdir -p ~/.zsh/completion
  if [ ! -f ~/.zsh/completion/$*[-1] ]; then
    eval $*[1,-2] | sed -e 's/^/compadd /g' > ~/.zsh/completion/$*[-1]
  fi

  `cat ~/.zsh/completion/$*[-1]`
}

_cheat () {
  completion_list 'cheat sheets | grep -v All' _cheat
}

compdef _cheat cheat

_rake () {
  if [ -f Rakefile ]; then
    compadd `rake -T | awk "{print \\$2}" | xargs`
  fi
}

compdef _rake rake

## load private .zshrc configuration file
#
[ -f ~/dotfiles/zshrc.private ] && source ~/dotfiles/zshrc.private

# load utilities
for f in $HOME/dotfiles/zsh/*.zsh; do
    source $f
done

# load rbenv
if [[ -f $HOME/.rbenv/bin/rbenv ]]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
    source $HOME/.rbenv/completions/rbenv.zsh
fi
export RUBY_CONFIGURE_OPTS="--enable-shared --disable-install-doc"

# load nvm
if [[ -f $HOME/.nvm/nvm.sh ]]; then
    source $HOME/.nvm/nvm.sh
fi

# load virtualenv
if [[ -f /usr/share/virtualenvwrapper/virtualenvwrapper.sh ]]; then
    export WORKON_HOME=$HOME/.virtualenvs
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
fi

# load luaenv
if [[ -f $HOME/.luaenv/bin/luaenv ]]; then
    export PATH="$HOME/.luaenv/bin:$PATH"
    eval "$(luaenv init -)"
    source $HOME/.luaenv/completions/luaenv.zsh
fi

# Rust
if [[ -f $HOME/.cargo/bin/rustup ]]; then
    export PATH="$HOME/.cargo/bin:$PATH"
    source <(rustup completions zsh)
fi

# Embulk
export PATH="$HOME/.embulk/bin:$PATH"

## load dir_colors
DIRCOLORS=$HOME/src/dircolors-solarized/dircolors.ansi-universal
test -s $DIRCOLORS && eval $(dircolors $DIRCOLORS)

fpath=(~/.zsh/Completion $fpath)

# k8s
type kubectl > /dev/null && source <(kubectl completion zsh)

export PATH="$HOME/.local/bin:$PATH"

